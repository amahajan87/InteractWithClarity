import { Component, h, Prop, State, Element } from '@stencil/core';
import CloseIcon from './assets/close-icon.svg';
import HiroWalletLogo from './assets/hiro-wallet-logo.svg';
import XverseWalletLogo from './assets/xverse-wallet-logo.svg';
import { getBrowser, getPlatform } from './utils';
const CHROME_BROWSER_URL = 'https://www.google.com/chrome/';
const BRAVE_BROWSER_URL = 'https://brave.com/';
const FIREFOX_BROWSER_URL = 'https://www.mozilla.org/en-US/';
const CHROME_STORE_URL = 'https://chrome.google.com/webstore/detail/hiro-wallet/ldinpeekobnhjjdofggfgjlcehhmanlj/';
const FIREFOX_STORE_URL = 'https://addons.mozilla.org/en-US/firefox/addon/hiro-wallet/';
const XVERSE_APP_STORE_URL = 'https://apps.apple.com/app/id1552272513';
const XVERSE_PLAY_STORE_URL = 'https://play.google.com/store/apps/details?id=com.secretkeylabs.xverse';
export class Modal {
  handleCloseModal() {
    var _a, _b;
    this.modalEl.remove();
    (_b = (_a = this.authOptions).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);
  }
  handleDownloadPath(browser) {
    if (browser === 'Chrome') {
      window.open(CHROME_STORE_URL, '_blank');
    }
    else if (browser === 'Firefox') {
      window.open(FIREFOX_STORE_URL, '_blank');
    }
    else if (browser === 'IOS') {
      window.open(XVERSE_APP_STORE_URL, '_blank');
    }
    else if (browser === 'Android') {
      window.open(XVERSE_PLAY_STORE_URL, '_blank');
    }
    else {
      window.open('https://www.hiro.so/wallet/install-web', '_blank');
    }
    this.hasOpenedInstall = true;
  }
  render() {
    const browser = getBrowser();
    const isMobile = getPlatform();
    const xverseWalletDescription = browser
      ? `Xverse is your gateway to Stacks on mobile. `
      : isMobile
        ? `Xverse is your gateway to Stacks apps like ${this.authOptions.appDetails.name}. Install it on your device to continue.`
        : `Mobile application for iOS and Android.`;
    return (h("div", { class: "modal-container" },
      h("div", { class: "modal-body" },
        h("div", { class: "modal-header" },
          h("div", { class: "close-modal" },
            h("img", { class: "close-icon", src: CloseIcon, onClick: () => this.handleCloseModal() })),
          isMobile || browser ? (h("span", { class: "modal-title" },
            "Get wallet to use ",
            this.authOptions.appDetails.name)) : (h("span", { class: "modal-title" }, "Your browser isn't supported"))),
        h("div", { class: "modal-subtitle" },
          "To sign in to ",
          this.authOptions.appDetails.name,
          ", you will need a Stacks-compatible wallet."),
        h("div", { class: "modal-content" },
          h("div", { class: "wallet-container" },
            h("div", { class: "modal-wallet-card" },
              h("img", { src: HiroWalletLogo }),
              h("div", { class: "modal-wallet-card-content" },
                h("span", { class: "modal-subheading" }, "Hiro Wallet"),
                browser && !isMobile ? (h("div", { class: "modal-wallet-text" },
                  "Hiro Wallet is your gateway to Stacks apps like",
                  ' ',
                  this.authOptions.appDetails.name,
                  ". Add it to ",
                  browser,
                  " to continue",
                  ' ')) : (h("div", { class: "modal-wallet-text" },
                  "Browser extension for ",
                  ` `,
                  h("a", { href: CHROME_BROWSER_URL, target: "_blank" }, "Chrome"),
                  `, `,
                  h("a", { href: BRAVE_BROWSER_URL, target: "_blank" }, "Brave"),
                  `, or `,
                  h("a", { href: FIREFOX_BROWSER_URL, target: "_blank" }, "Firefox"),
                  ` on desktop.`)),
                h("span", { class: "link", onClick: () => window.open('https://www.hiro.so/wallet', '_blank') }, "About Hiro Wallet \u2192"),
                browser && !isMobile && (h("div", { class: "download-app-container" }, this.hasOpenedInstall ? (h("div", { class: "modal-wallet-text" }, "After installing Hiro Wallet, reload this page and sign in.")) : (h("button", { class: "button", onClick: () => {
                    this.handleDownloadPath(browser);
                  } }, "Download")))))),
            h("div", { class: "modal-wallet-card" },
              h("img", { src: XverseWalletLogo }),
              h("div", { class: "modal-wallet-card-content" },
                h("span", { class: "modal-subheading" }, "Xverse Wallet"),
                h("div", { class: "modal-wallet-text" }, xverseWalletDescription),
                h("span", { class: "link", onClick: () => window.open('https://www.xverse.app/', '_blank') }, "About Xverse Wallet \u2192"),
                isMobile && (h("div", { class: "download-app-container" }, this.hasOpenedInstall ? (h("span", { class: "link", onClick: () => window.open(`stacks://browser?url=${window.location.href}`, '_blank') }, "Open this page in Xverse Wallet \u2192")) : (h("button", { class: "button", onClick: () => {
                    this.handleDownloadPath(isMobile);
                  } }, "Download")))))))))));
  }
  static get is() { return "connect-modal"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["modal.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["modal.css"]
  }; }
  static get assetsDirs() { return ["assets"]; }
  static get properties() { return {
    "authOptions": {
      "type": "unknown",
      "mutable": false,
      "complexType": {
        "original": "AuthOptions",
        "resolved": "AuthOptions",
        "references": {
          "AuthOptions": {
            "location": "import",
            "path": "@stacks/connect/types/auth"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      }
    }
  }; }
  static get states() { return {
    "hasOpenedInstall": {}
  }; }
  static get elementRef() { return "modalEl"; }
}
